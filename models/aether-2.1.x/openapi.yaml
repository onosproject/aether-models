# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0
components:
  parameters:
    target:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: target (device in onos-config)
      in: path
      name: target
      required: true
  requestBodies:
    RequestBody_Applications:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Applications'
    RequestBody_Applications_Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Applications_Application'
    RequestBody_Applications_Application_Endpoint:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Applications_Application_Endpoint'
    RequestBody_Applications_Application_Endpoint_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Applications_Application_Endpoint_Mbr'
    RequestBody_Sites:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites'
    RequestBody_Sites_Site:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site'
    RequestBody_Sites_Site_Connectivity-service:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Connectivity-service'
    RequestBody_Sites_Site_Connectivity-service_Core-4g:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Connectivity-service_Core-4g'
    RequestBody_Sites_Site_Connectivity-service_Core-5g:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Connectivity-service_Core-5g'
    RequestBody_Sites_Site_Device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Device'
    RequestBody_Sites_Site_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Device-group'
    RequestBody_Sites_Site_Device-group_Device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Device-group_Device'
    RequestBody_Sites_Site_Device-group_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Device-group_Mbr'
    RequestBody_Sites_Site_Device_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Device_State'
    RequestBody_Sites_Site_Imsi-definition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Imsi-definition'
    RequestBody_Sites_Site_Ip-domain:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Ip-domain'
    RequestBody_Sites_Site_Monitoring:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Monitoring'
    RequestBody_Sites_Site_Monitoring_Edge-device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Monitoring_Edge-device'
    RequestBody_Sites_Site_Sim-card:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Sim-card'
    RequestBody_Sites_Site_Slice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Slice'
    RequestBody_Sites_Site_Slice_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Slice_Device-group'
    RequestBody_Sites_Site_Slice_Filter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Slice_Filter'
    RequestBody_Sites_Site_Slice_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Slice_Mbr'
    RequestBody_Sites_Site_Slice_Priority-traffic-rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Slice_Priority-traffic-rule'
    RequestBody_Sites_Site_Small-cell:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Small-cell'
    RequestBody_Sites_Site_Upf:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sites_Site_Upf'
    RequestBody_Templates:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Templates'
    RequestBody_Templates_Template:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Templates_Template'
    RequestBody_Templates_Template_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Templates_Template_Mbr'
    RequestBody_Traffic-classes:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Traffic-classes'
    RequestBody_Traffic-classes_Traffic-class:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Traffic-classes_Traffic-class'
  schemas:
    AdditionalPropertyTarget:
      description: Optionally specify a target other than the default (only on PATCH
        method)
      properties:
        target:
          description: an override of the target (device)
          title: target
          type: string
      title: AdditionalPropertyTarget
      type: object
    AdditionalPropertyUnchanged:
      description: To optionally omit 'required' properties, add them to 'unchanged'
        list
      properties:
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertyUnchanged
      type: object
    Applications:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The application grouping
      properties:
        application:
          description: List of applications
          items:
            $ref: '#/components/schemas/Applications_Application'
          title: ItemApplications_Application
          type: array
          uniqueItems: true
          x-keys:
          - application-id
      title: Applications
      type: object
    Applications_Application:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        address:
          description: Address of this application. Either a hostname, an IP, or a
            subnet.
          title: address
          type: string
        application-id:
          description: ID for this application.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: application-id
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint:
          description: list for endpoint
          items:
            $ref: '#/components/schemas/Applications_Application_Endpoint'
          title: Endpoint
          type: array
          uniqueItems: true
          x-keys:
          - endpoint-id
          x-must:
          - ErrorMessage:
              Name: port-start must be less than or equal to port-end
            Name: number(./app:port-start) <= number(./app:port-end)
      required:
      - address
      - application-id
      type: object
    Applications_Application_Endpoint:
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint-id:
          description: Id of this endpoint
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: endpoint-id
          type: string
        mbr:
          $ref: '#/components/schemas/Applications_Application_Endpoint_Mbr'
        port-end:
          description: Last port in range
          maximum: 65535
          minimum: 0
          title: port-end
          type: integer
        port-start:
          description: First port in range
          maximum: 65535
          minimum: 0
          title: port-start
          type: integer
        protocol:
          default: TCP
          description: Protocol of this endpoint
          maxLength: 3
          minLength: 3
          pattern: TCP|UDP
          title: protocol
          type: string
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-classes/tc:traffic-class/tc:traffic-class-id
      required:
      - endpoint-id
      type: object
    Applications_Application_Endpoint_List:
      items:
        $ref: '#/components/schemas/Applications_Application_Endpoint'
      type: array
      x-list-multiple: true
    Applications_Application_Endpoint_Mbr:
      description: Maximum bitrate
      properties:
        downlink:
          description: Per-Device per application MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-Device per-Application MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      title: Applications_Application_Endpoint_Mbr
      type: object
    Applications_Application_List:
      items:
        $ref: '#/components/schemas/Applications_Application'
      type: array
      x-list-multiple: true
    Sites:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The site grouping
      properties:
        site:
          description: List of site
          items:
            $ref: '#/components/schemas/Sites_Site'
          title: ItemSites_Site
          type: array
          uniqueItems: true
          x-keys:
          - site-id
          x-must:
          - ErrorMessage:
              Name: a device group cannot be used in more than one slice in a site
            Name: count(site:slice[set-contains(following-sibling::site:slice/site:device-group/@site:device-group,
              site:device-group/@site:device-group)]/@site:slice-id) = 0
      title: Sites
      type: object
    Sites_Site:
      properties:
        connectivity-service:
          $ref: '#/components/schemas/Sites_Site_Connectivity-service'
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device:
          description: List of devices
          items:
            $ref: '#/components/schemas/Sites_Site_Device'
          title: Device
          type: array
          uniqueItems: true
          x-keys:
          - device-id
          x-must: []
        device-group:
          description: List of device groups
          items:
            $ref: '#/components/schemas/Sites_Site_Device-group'
          title: Device-group
          type: array
          uniqueItems: true
          x-keys:
          - device-group-id
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        imsi-definition:
          $ref: '#/components/schemas/Sites_Site_Imsi-definition'
        ip-domain:
          description: List of ip domains
          items:
            $ref: '#/components/schemas/Sites_Site_Ip-domain'
          title: Ip-domain
          type: array
          uniqueItems: true
          x-keys:
          - ip-domain-id
        monitoring:
          $ref: '#/components/schemas/Sites_Site_Monitoring'
        sim-card:
          description: List of sim cards
          items:
            $ref: '#/components/schemas/Sites_Site_Sim-card'
          title: Sim-card
          type: array
          uniqueItems: true
          x-keys:
          - sim-id
          x-must: []
        site-id:
          description: ID for this site.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: site-id
          type: string
        slice:
          description: List of Slices
          items:
            $ref: '#/components/schemas/Sites_Site_Slice'
          title: Slice
          type: array
          uniqueItems: true
          x-keys:
          - slice-id
        small-cell:
          description: List of small cell addresses
          items:
            $ref: '#/components/schemas/Sites_Site_Small-cell'
          title: Small-cell
          type: array
          uniqueItems: true
          x-keys:
          - small-cell-id
        upf:
          description: A list of named upfs.
          items:
            $ref: '#/components/schemas/Sites_Site_Upf'
          title: Upf
          type: array
          uniqueItems: true
          x-keys:
          - upf-id
      required:
      - site-id
      type: object
    Sites_Site_Connectivity-service:
      description: Connectivity to the mobile core
      properties:
        core-4g:
          $ref: '#/components/schemas/Sites_Site_Connectivity-service_Core-4g'
        core-5g:
          $ref: '#/components/schemas/Sites_Site_Connectivity-service_Core-5g'
      title: Sites_Site_Connectivity-service
      type: object
    Sites_Site_Connectivity-service_Core-4g:
      description: The 4g core endpoint
      properties:
        acc-prometheus-url:
          description: URL of ACC prometheus
          title: acc-prometheus-url
          type: string
        endpoint:
          description: Endpoint URL
          title: endpoint
          type: string
      title: Sites_Site_Connectivity-service_Core-4g
      type: object
    Sites_Site_Connectivity-service_Core-5g:
      description: The 5g core endpoint
      properties:
        acc-prometheus-url:
          description: URL of ACC prometheus
          title: acc-prometheus-url
          type: string
        endpoint:
          description: Endpoint URL
          title: endpoint
          type: string
      title: Sites_Site_Connectivity-service_Core-5g
      type: object
    Sites_Site_Device:
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device-id:
          description: ID for this device.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: device-id
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        imei:
          description: IMEI for this device
          maxLength: 16
          minLength: 14
          pattern: '[0-9]{14,16}'
          title: imei
          type: string
        sim-card:
          description: Link to simcard
          title: sim-card
          type: string
          x-leafref: ../../sim-card/sim-id
        state:
          $ref: '#/components/schemas/Sites_Site_Device_State'
      required:
      - device-id
      type: object
    Sites_Site_Device-group:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device:
          description: list of devices in this device-group
          items:
            $ref: '#/components/schemas/Sites_Site_Device-group_Device'
          title: Device
          type: array
          uniqueItems: true
          x-keys:
          - device-id
        device-group-id:
          description: ID for this device group.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: device-group-id
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        ip-domain:
          description: |-
            Link to ip-domain settings that determine the pool of IP addresses,
            as well as the domain resolver settings to use
          title: ip-domain
          type: string
          x-leafref: ../../ip-domain/ip-domain-id
        mbr:
          $ref: '#/components/schemas/Sites_Site_Device-group_Mbr'
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-classes/tc:traffic-class/tc:traffic-class-id
      required:
      - device-group-id
      - traffic-class
      type: object
    Sites_Site_Device-group_Device:
      properties:
        device-id:
          description: Link to device
          title: device-id
          type: string
          x-leafref: ../../../device/device-id
        enable:
          default: true
          description: Enable this device
          title: enable
          type: boolean
      required:
      - device-id
      type: object
    Sites_Site_Device-group_Device_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Device-group_Device'
      type: array
      x-list-multiple: true
    Sites_Site_Device-group_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Device-group'
      type: array
      x-list-multiple: true
    Sites_Site_Device-group_Mbr:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: Maximum bitrate
      properties:
        downlink:
          description: Per-device MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-device MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      required:
      - downlink
      - uplink
      title: Sites_Site_Device-group_Mbr
      type: object
    Sites_Site_Device_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Device'
      type: array
      x-list-multiple: true
    Sites_Site_Device_State:
      description: read only attributes of device
      properties:
        connected:
          description: the connected status (Yes|No|Idle)
          pattern: Yes|No|Idle
          title: connected
          type: string
        ip-address:
          description: the ip address assigned to the device
          title: ip-address
          type: string
        last-connected:
          description: The time in UTC that the device was last connected
          pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
          title: last-connected
          type: string
      title: Sites_Site_Device_State
      type: object
    Sites_Site_Imsi-definition:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: container for imsi-defination
      properties:
        enterprise:
          description: enterprise-specific identifier
          format: int32
          maximum: 999
          minimum: 0
          title: enterprise
          type: integer
        format:
          description: IMSI format specifier, describes how fields are packed into
            an IMSI. Must be exactly 15 characters long. For example, CCCNNNEEESSSSSS.
          maxLength: 15
          minLength: 15
          title: format
          type: string
        mcc:
          description: mobile country code
          pattern: '[0-9]{3}'
          title: mcc
          type: string
        mnc:
          description: mobile network code
          pattern: '[0-9]{2,3}'
          title: mnc
          type: string
      required:
      - enterprise
      - format
      - mcc
      - mnc
      title: Sites_Site_Imsi-definition
      type: object
    Sites_Site_Ip-domain:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        admin-status:
          default: ENABLE
          description: administrative status
          maxLength: 16
          pattern: ENABLE|MAINTENANCE|DISABLE
          title: admin-status
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        dnn:
          description: DNN/APN
          maxLength: 32
          minLength: 1
          title: dnn
          type: string
        dns-primary:
          description: primary dns server name
          title: dns-primary
          type: string
        dns-secondary:
          description: secondary dns server name
          title: dns-secondary
          type: string
        ip-domain-id:
          description: ID for this ip domain.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: ip-domain-id
          type: string
        mtu:
          default: 1492
          description: maximum transmission unit
          maximum: 65535
          minimum: 0
          title: mtu
          type: integer
        subnet:
          description: subnet to allocate ip addresses from
          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))
          title: subnet
          type: string
      required:
      - dnn
      - ip-domain-id
      - subnet
      type: object
    Sites_Site_Ip-domain_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Ip-domain'
      type: array
      x-list-multiple: true
    Sites_Site_List:
      items:
        $ref: '#/components/schemas/Sites_Site'
      type: array
      x-list-multiple: true
    Sites_Site_Monitoring:
      description: container for monitoring
      properties:
        edge-cluster-prometheus-url:
          description: URL of edge cluster prometheus
          title: edge-cluster-prometheus-url
          type: string
        edge-device:
          description: List of edge monitoring devices
          items:
            $ref: '#/components/schemas/Sites_Site_Monitoring_Edge-device'
          title: ItemSites_Site_Monitoring_Edge-device
          type: array
          uniqueItems: true
          x-keys:
          - edge-device-id
        edge-monitoring-prometheus-url:
          description: URL of monitoring prometheus
          title: edge-monitoring-prometheus-url
          type: string
      title: Sites_Site_Monitoring
      type: object
    Sites_Site_Monitoring_Edge-device:
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        edge-device-id:
          description: Id of edge monitoring device
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: edge-device-id
          type: string
      required:
      - edge-device-id
      type: object
    Sites_Site_Monitoring_Edge-device_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Monitoring_Edge-device'
      type: array
      x-list-multiple: true
    Sites_Site_Sim-card:
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        iccid:
          description: ICCID for this sim card
          maxLength: 22
          minLength: 19
          pattern: '[0-9]{18,21}[0-9A-F]'
          title: iccid
          type: string
        imsi:
          description: IMSI for this sim card
          format: int64
          minimum: 0
          title: imsi
          type: integer
        sim-id:
          description: ID for this sim card.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: sim-id
          type: string
      required:
      - sim-id
      type: object
    Sites_Site_Sim-card_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Sim-card'
      type: array
      x-list-multiple: true
    Sites_Site_Slice:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        connectivity-service:
          description: The type of connectivity service 4g/5g to use with the slice
          title: connectivity-service
          type: string
        default-behavior:
          description: Default behavior if no filter rules match
          maxLength: 20
          pattern: DENY-ALL|ALLOW-ALL|ALLOW-PUBLIC
          title: default-behavior
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device-group:
          description: |-
            A list of device groups. Groups will only participate in
            the Slice if the enable field is set to True
          items:
            $ref: '#/components/schemas/Sites_Site_Slice_Device-group'
          title: Device-group
          type: array
          uniqueItems: true
          x-keys:
          - device-group
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        filter:
          description: |-
            A list of applications to allow and/or deny. Rules are executed in
            priority order. The first rule to match will determine the fate
            of the packet.
          items:
            $ref: '#/components/schemas/Sites_Site_Slice_Filter'
          title: Filter
          type: array
          uniqueItems: true
          x-keys:
          - application
        mbr:
          $ref: '#/components/schemas/Sites_Site_Slice_Mbr'
        priority-traffic-rule:
          description: List of priority traffic rules
          items:
            $ref: '#/components/schemas/Sites_Site_Slice_Priority-traffic-rule'
          title: Priority-traffic-rule
          type: array
          uniqueItems: true
          x-keys:
          - priority-traffic-rule-id
          x-must: []
        sd:
          description: Slice differentiator. Immutable.
          format: int32
          maximum: 16777215
          minimum: 0
          title: sd
          type: integer
        slice-id:
          description: ID for this slice.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: slice-id
          type: string
        sst:
          description: Slice/Service type. Immutable.
          maximum: 255
          minimum: 1
          title: sst
          type: integer
        upf:
          description: Link to user plane that implements this vcf
          title: upf
          type: string
          x-leafref: ../../upf/upf-id
      required:
      - default-behavior
      - sd
      - slice-id
      - sst
      type: object
    Sites_Site_Slice_Device-group:
      properties:
        device-group:
          description: Link to device group
          title: device-group
          type: string
          x-leafref: ../../../device-group/device-group-id
        enable:
          default: true
          description: Enable this device group
          title: enable
          type: boolean
      required:
      - device-group
      type: object
    Sites_Site_Slice_Device-group_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Slice_Device-group'
      type: array
      x-list-multiple: true
    Sites_Site_Slice_Filter:
      properties:
        allow:
          default: true
          description: Allow or deny this application
          title: allow
          type: boolean
        application:
          description: Link to application
          title: application
          type: string
          x-leafref: /app:applications/app:application/app:application-id
        priority:
          description: Priority of this application
          maximum: 200
          minimum: 0
          title: priority
          type: integer
      required:
      - application
      type: object
    Sites_Site_Slice_Filter_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Slice_Filter'
      type: array
      x-list-multiple: true
    Sites_Site_Slice_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Slice'
      type: array
      x-list-multiple: true
    Sites_Site_Slice_Mbr:
      description: Per slice Maximum Bit Rate
      properties:
        downlink:
          description: Per-Slice MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        downlink-burst-size:
          default: 625000
          description: Per-Slice Downlink burst size
          format: int32
          minimum: 0
          title: downlink-burst-size
          type: integer
        uplink:
          description: Per-Slice MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
        uplink-burst-size:
          default: 625000
          description: Per-Slice Uplink burst size
          format: int32
          minimum: 0
          title: uplink-burst-size
          type: integer
      title: Sites_Site_Slice_Mbr
      type: object
    Sites_Site_Slice_Priority-traffic-rule:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        application:
          description: Link to application
          title: application
          type: string
          x-leafref: /app:applications/app:application/app:application-id
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device:
          description: Link to device
          title: device
          type: string
          x-leafref: ../../../device/device-id
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint:
          description: Link to endpoint in application
          title: endpoint
          type: string
          x-leafref: /app:applications/app:application/app:endpoint/app:endpoint-id
        gbr:
          $ref: '#/components/schemas/Sites_Site_Slice_Priority-traffic-rule_Gbr'
        mbr:
          $ref: '#/components/schemas/Sites_Site_Slice_Priority-traffic-rule_Mbr'
        priority-traffic-rule-id:
          description: ID for this priority traffic class.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: priority-traffic-rule-id
          type: string
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-classes/tc:traffic-class/tc:traffic-class-id
      required:
      - application
      - device
      - endpoint
      - priority-traffic-rule-id
      type: object
    Sites_Site_Slice_Priority-traffic-rule_Gbr:
      description: For choice bitrate:gbr-case
      properties:
        downlink:
          description: Per-Device per application downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-Device per-Application uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      title: Sites_Site_Slice_Priority-traffic-rule_Gbr
      type: object
    Sites_Site_Slice_Priority-traffic-rule_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Slice_Priority-traffic-rule'
      type: array
      x-list-multiple: true
    Sites_Site_Slice_Priority-traffic-rule_Mbr:
      description: For choice bitrate:mbr-case
      properties:
        downlink:
          description: Per-Device per application downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-Device per-Application uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      title: Sites_Site_Slice_Priority-traffic-rule_Mbr
      type: object
    Sites_Site_Small-cell:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        address:
          description: Address of small cell
          title: address
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enable:
          default: true
          description: Enable this small cell
          title: enable
          type: boolean
        small-cell-id:
          description: Id of small cell
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: small-cell-id
          type: string
        tac:
          description: Type Allocation Code
          maxLength: 8
          minLength: 4
          pattern: '[0-9A-F\.]*'
          title: tac
          type: string
      required:
      - small-cell-id
      - tac
      type: object
    Sites_Site_Small-cell_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Small-cell'
      type: array
      x-list-multiple: true
    Sites_Site_Upf:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        address:
          description: Address of UPF
          title: address
          type: string
        config-endpoint:
          description: url for configuring the UPF
          title: config-endpoint
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        port:
          description: Port for UPF
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        upf-id:
          description: ID for this upf.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: upf-id
          type: string
      required:
      - address
      - port
      - upf-id
      type: object
    Sites_Site_Upf_List:
      items:
        $ref: '#/components/schemas/Sites_Site_Upf'
      type: array
      x-list-multiple: true
    Templates:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The template grouping
      properties:
        template:
          description: List of slice templates
          items:
            $ref: '#/components/schemas/Templates_Template'
          title: ItemTemplates_Template
          type: array
          uniqueItems: true
          x-keys:
          - template-id
      title: Templates
      type: object
    Templates_Template:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      properties:
        default-behavior:
          description: Default behavior if no filter rules match
          maxLength: 20
          pattern: DENY-ALL|ALLOW-ALL|ALLOW-PUBLIC
          title: default-behavior
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        mbr:
          $ref: '#/components/schemas/Templates_Template_Mbr'
        sd:
          description: Slice differentiator
          format: int32
          maximum: 16777215
          minimum: 0
          title: sd
          type: integer
        sst:
          description: Slice/Service type
          maximum: 255
          minimum: 1
          title: sst
          type: integer
        template-id:
          description: ID for this slice template.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: template-id
          type: string
      required:
      - default-behavior
      - template-id
      type: object
    Templates_Template_List:
      items:
        $ref: '#/components/schemas/Templates_Template'
      type: array
      x-list-multiple: true
    Templates_Template_Mbr:
      description: Per-Slice QOS Settings Maximum Bit Rate
      properties:
        downlink:
          description: Per-Slice MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        downlink-burst-size:
          default: 625000
          description: Per-Slice Downlink burst size
          format: int32
          minimum: 0
          title: downlink-burst-size
          type: integer
        uplink:
          description: Per-Slice MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
        uplink-burst-size:
          default: 625000
          description: Per-Slice Uplink burst size
          format: int32
          minimum: 0
          title: uplink-burst-size
          type: integer
      title: Templates_Template_Mbr
      type: object
    Traffic-classes:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The traffic-class grouping
      properties:
        traffic-class:
          description: List of traffic class
          items:
            $ref: '#/components/schemas/Traffic-classes_Traffic-class'
          title: ItemTraffic-classes_Traffic-class
          type: array
          uniqueItems: true
          x-keys:
          - traffic-class-id
      title: Traffic-classes
      type: object
    Traffic-classes_Traffic-class:
      properties:
        arp:
          description: Allocation and Retention Priority. 1 is the highest. 15 is
            the lowest.
          maximum: 15
          minimum: 1
          title: arp
          type: integer
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        pdb:
          description: PDB
          maximum: 1000
          minimum: 0
          title: pdb
          type: integer
        pelr:
          description: PELR exponent
          maximum: 10
          minimum: 0
          title: pelr
          type: integer
        qci:
          description: QOS Class Identifier
          maximum: 32
          minimum: 1
          title: qci
          type: integer
        traffic-class-id:
          description: ID for this traffic class.
          maxLength: 63
          minLength: 1
          pattern: '[a-z]([a-z0-9-]?[a-z0-9])*'
          title: traffic-class-id
          type: string
      required:
      - traffic-class-id
      type: object
    Traffic-classes_Traffic-class_List:
      items:
        $ref: '#/components/schemas/Traffic-classes_Traffic-class'
      type: array
      x-list-multiple: true
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  description: TODO add a description field in Metadata.yaml?
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: aether-2.1.x
  version: 2.1.x
openapi: 3.0.0
paths:
  /aether/v2.1.x/{target}/applications:
    delete:
      operationId: deleteApplications_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /applications
    description: The application grouping
    get:
      operationId: getApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: GET OK 200
      summary: GET /applications Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postApplications
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Applications'
      responses:
        "201":
          description: created
      summary: POST /applications
  /aether/v2.1.x/{target}/applications/application:
    description: List of applications
    get:
      operationId: getApplications_Application_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Applications_Application_List'
                type: array
          description: GET OK 200
      summary: GET /applications/application List
      tags:
      - Applications_Application
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v2.1.x/{target}/applications/application/{application-id}:
    delete:
      operationId: deleteApplications_Application_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /applications/application
    description: List of applications
    get:
      operationId: getApplications_Application
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications_Application'
          description: GET OK 200
      summary: GET /applications/application Container
      tags:
      - Applications_Application
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
    post:
      operationId: postApplications_Application
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Applications_Application'
      responses:
        "201":
          description: created
      summary: POST /applications/application
  /aether/v2.1.x/{target}/applications/application/{application-id}/endpoint:
    description: list for endpoint
    get:
      operationId: getApplications_Application_Endpoint_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Applications_Application_Endpoint_List'
                type: array
          description: GET OK 200
      summary: GET /applications/application/{application-id}/endpoint List
      tags:
      - Applications_Application_Endpoint
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
  /aether/v2.1.x/{target}/applications/application/{application-id}/endpoint/{endpoint-id}:
    delete:
      operationId: deleteApplications_Application_Endpoint_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /applications/application/{application-id}/endpoint
    description: list for endpoint
    get:
      operationId: getApplications_Application_Endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications_Application_Endpoint'
          description: GET OK 200
      summary: GET /applications/application/{application-id}/endpoint Container
      tags:
      - Applications_Application_Endpoint
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {endpoint-id}
      in: path
      name: endpoint-id
      required: true
    post:
      operationId: postApplications_Application_Endpoint
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Applications_Application_Endpoint'
      responses:
        "201":
          description: created
      summary: POST /applications/application/{application-id}/endpoint
  /aether/v2.1.x/{target}/applications/application/{application-id}/endpoint/{endpoint-id}/mbr:
    delete:
      operationId: deleteApplications_Application_Endpoint_Mbr_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /applications/application/{application-id}/endpoint/{endpoint-id}/mbr
    description: Maximum bitrate
    get:
      operationId: getApplications_Application_Endpoint_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications_Application_Endpoint_Mbr'
          description: GET OK 200
      summary: GET /applications/application/{application-id}/endpoint/{endpoint-id}/mbr
        Container
      tags:
      - Applications_Application_Endpoint
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application-id}
      in: path
      name: application-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {endpoint-id}
      in: path
      name: endpoint-id
      required: true
    post:
      operationId: postApplications_Application_Endpoint_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Applications_Application_Endpoint_Mbr'
      responses:
        "201":
          description: created
      summary: POST /applications/application/{application-id}/endpoint/{endpoint-id}/mbr
  /aether/v2.1.x/{target}/sites:
    delete:
      operationId: deleteSites_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites
    description: The site grouping
    get:
      operationId: getSites
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites'
          description: GET OK 200
      summary: GET /sites Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSites
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites'
      responses:
        "201":
          description: created
      summary: POST /sites
  /aether/v2.1.x/{target}/sites/site:
    description: List of site
    get:
      operationId: getSites_Site_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site List
      tags:
      - Sites_Site
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v2.1.x/{target}/sites/site/{site-id}:
    delete:
      operationId: deleteSites_Site_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site
    description: List of site
    get:
      operationId: getSites_Site
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site'
          description: GET OK 200
      summary: GET /sites/site Container
      tags:
      - Sites_Site
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSites_Site
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site'
      responses:
        "201":
          description: created
      summary: POST /sites/site
  /aether/v2.1.x/{target}/sites/site/{site-id}/connectivity-service:
    delete:
      operationId: deleteSites_Site_Connectivity-service_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/connectivity-service
    description: Connectivity to the mobile core
    get:
      operationId: getSites_Site_Connectivity-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Connectivity-service'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/connectivity-service Container
      tags:
      - Sites_Site
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSites_Site_Connectivity-service
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Connectivity-service'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/connectivity-service
  /aether/v2.1.x/{target}/sites/site/{site-id}/connectivity-service/core-4g:
    delete:
      operationId: deleteSites_Site_Connectivity-service_Core-4g_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/connectivity-service/core-4g
    description: The 4g core endpoint
    get:
      operationId: getSites_Site_Connectivity-service_Core-4g
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Connectivity-service_Core-4g'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/connectivity-service/core-4g Container
      tags:
      - Sites_Site_Connectivity-service
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSites_Site_Connectivity-service_Core-4g
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Connectivity-service_Core-4g'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/connectivity-service/core-4g
  /aether/v2.1.x/{target}/sites/site/{site-id}/connectivity-service/core-5g:
    delete:
      operationId: deleteSites_Site_Connectivity-service_Core-5g_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/connectivity-service/core-5g
    description: The 5g core endpoint
    get:
      operationId: getSites_Site_Connectivity-service_Core-5g
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Connectivity-service_Core-5g'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/connectivity-service/core-5g Container
      tags:
      - Sites_Site_Connectivity-service
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSites_Site_Connectivity-service_Core-5g
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Connectivity-service_Core-5g'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/connectivity-service/core-5g
  /aether/v2.1.x/{target}/sites/site/{site-id}/device:
    description: List of devices
    get:
      operationId: getSites_Site_Device_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Device_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/device List
      tags:
      - Sites_Site_Device
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/device-group:
    description: List of device groups
    get:
      operationId: getSites_Site_Device-group_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Device-group_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/device-group List
      tags:
      - Sites_Site_Device-group
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/device-group/{device-group-id}:
    delete:
      operationId: deleteSites_Site_Device-group_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/device-group
    description: List of device groups
    get:
      operationId: getSites_Site_Device-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Device-group'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/device-group Container
      tags:
      - Sites_Site_Device-group
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
    post:
      operationId: postSites_Site_Device-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Device-group'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/device-group
  /aether/v2.1.x/{target}/sites/site/{site-id}/device-group/{device-group-id}/device:
    description: list of devices in this device-group
    get:
      operationId: getSites_Site_Device-group_Device_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Device-group_Device_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/device-group/{device-group-id}/device List
      tags:
      - Sites_Site_Device-group_Device
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/device-group/{device-group-id}/device/{device-id}:
    delete:
      operationId: deleteSites_Site_Device-group_Device_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/device-group/{device-group-id}/device
    description: list of devices in this device-group
    get:
      operationId: getSites_Site_Device-group_Device
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Device-group_Device'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/device-group/{device-group-id}/device Container
      tags:
      - Sites_Site_Device-group_Device
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-id}
      in: path
      name: device-id
      required: true
    post:
      operationId: postSites_Site_Device-group_Device
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Device-group_Device'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/device-group/{device-group-id}/device
  /aether/v2.1.x/{target}/sites/site/{site-id}/device-group/{device-group-id}/mbr:
    delete:
      operationId: deleteSites_Site_Device-group_Mbr_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/device-group/{device-group-id}/mbr
    description: Maximum bitrate
    get:
      operationId: getSites_Site_Device-group_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Device-group_Mbr'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/device-group/{device-group-id}/mbr Container
      tags:
      - Sites_Site_Device-group
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group-id}
      in: path
      name: device-group-id
      required: true
    post:
      operationId: postSites_Site_Device-group_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Device-group_Mbr'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/device-group/{device-group-id}/mbr
  /aether/v2.1.x/{target}/sites/site/{site-id}/device/{device-id}:
    delete:
      operationId: deleteSites_Site_Device_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/device
    description: List of devices
    get:
      operationId: getSites_Site_Device
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Device'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/device Container
      tags:
      - Sites_Site_Device
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-id}
      in: path
      name: device-id
      required: true
    post:
      operationId: postSites_Site_Device
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Device'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/device
  /aether/v2.1.x/{target}/sites/site/{site-id}/device/{device-id}/state:
    description: read only attributes of device
    get:
      operationId: getSites_Site_Device_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Device_State'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/device/{device-id}/state Container
      tags:
      - Sites_Site_Device
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-id}
      in: path
      name: device-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/imsi-definition:
    delete:
      operationId: deleteSites_Site_Imsi-definition_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/imsi-definition
    description: container for imsi-defination
    get:
      operationId: getSites_Site_Imsi-definition
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Imsi-definition'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/imsi-definition Container
      tags:
      - Sites_Site
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSites_Site_Imsi-definition
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Imsi-definition'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/imsi-definition
  /aether/v2.1.x/{target}/sites/site/{site-id}/ip-domain:
    description: List of ip domains
    get:
      operationId: getSites_Site_Ip-domain_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Ip-domain_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/ip-domain List
      tags:
      - Sites_Site_Ip-domain
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/ip-domain/{ip-domain-id}:
    delete:
      operationId: deleteSites_Site_Ip-domain_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/ip-domain
    description: List of ip domains
    get:
      operationId: getSites_Site_Ip-domain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Ip-domain'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/ip-domain Container
      tags:
      - Sites_Site_Ip-domain
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {ip-domain-id}
      in: path
      name: ip-domain-id
      required: true
    post:
      operationId: postSites_Site_Ip-domain
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Ip-domain'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/ip-domain
  /aether/v2.1.x/{target}/sites/site/{site-id}/monitoring:
    delete:
      operationId: deleteSites_Site_Monitoring_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/monitoring
    description: container for monitoring
    get:
      operationId: getSites_Site_Monitoring
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Monitoring'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/monitoring Container
      tags:
      - Sites_Site
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    post:
      operationId: postSites_Site_Monitoring
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Monitoring'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/monitoring
  /aether/v2.1.x/{target}/sites/site/{site-id}/monitoring/edge-device:
    description: List of edge monitoring devices
    get:
      operationId: getSites_Site_Monitoring_Edge-device_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Monitoring_Edge-device_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/monitoring/edge-device List
      tags:
      - Sites_Site_Monitoring_Edge-device
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/monitoring/edge-device/{edge-device-id}:
    delete:
      operationId: deleteSites_Site_Monitoring_Edge-device_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/monitoring/edge-device
    description: List of edge monitoring devices
    get:
      operationId: getSites_Site_Monitoring_Edge-device
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Monitoring_Edge-device'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/monitoring/edge-device Container
      tags:
      - Sites_Site_Monitoring_Edge-device
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {edge-device-id}
      in: path
      name: edge-device-id
      required: true
    post:
      operationId: postSites_Site_Monitoring_Edge-device
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Monitoring_Edge-device'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/monitoring/edge-device
  /aether/v2.1.x/{target}/sites/site/{site-id}/sim-card:
    description: List of sim cards
    get:
      operationId: getSites_Site_Sim-card_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Sim-card_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/sim-card List
      tags:
      - Sites_Site_Sim-card
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/sim-card/{sim-id}:
    delete:
      operationId: deleteSites_Site_Sim-card_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/sim-card
    description: List of sim cards
    get:
      operationId: getSites_Site_Sim-card
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Sim-card'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/sim-card Container
      tags:
      - Sites_Site_Sim-card
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {sim-id}
      in: path
      name: sim-id
      required: true
    post:
      operationId: postSites_Site_Sim-card
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Sim-card'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/sim-card
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice:
    description: List of Slices
    get:
      operationId: getSites_Site_Slice_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Slice_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice List
      tags:
      - Sites_Site_Slice
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice/{slice-id}:
    delete:
      operationId: deleteSites_Site_Slice_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/slice
    description: List of Slices
    get:
      operationId: getSites_Site_Slice
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Slice'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice Container
      tags:
      - Sites_Site_Slice
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    post:
      operationId: postSites_Site_Slice
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Slice'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/slice
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice/{slice-id}/device-group:
    description: |-
      A list of device groups. Groups will only participate in
      the Slice if the enable field is set to True
    get:
      operationId: getSites_Site_Slice_Device-group_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Slice_Device-group_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice/{slice-id}/device-group List
      tags:
      - Sites_Site_Slice_Device-group
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice/{slice-id}/device-group/{device-group}:
    delete:
      operationId: deleteSites_Site_Slice_Device-group_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/slice/{slice-id}/device-group
    description: |-
      A list of device groups. Groups will only participate in
      the Slice if the enable field is set to True
    get:
      operationId: getSites_Site_Slice_Device-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Slice_Device-group'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice/{slice-id}/device-group Container
      tags:
      - Sites_Site_Slice_Device-group
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group}
      in: path
      name: device-group
      required: true
    post:
      operationId: postSites_Site_Slice_Device-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Slice_Device-group'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/slice/{slice-id}/device-group
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice/{slice-id}/filter:
    description: |-
      A list of applications to allow and/or deny. Rules are executed in
      priority order. The first rule to match will determine the fate
      of the packet.
    get:
      operationId: getSites_Site_Slice_Filter_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Slice_Filter_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice/{slice-id}/filter List
      tags:
      - Sites_Site_Slice_Filter
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice/{slice-id}/filter/{application}:
    delete:
      operationId: deleteSites_Site_Slice_Filter_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/slice/{slice-id}/filter
    description: |-
      A list of applications to allow and/or deny. Rules are executed in
      priority order. The first rule to match will determine the fate
      of the packet.
    get:
      operationId: getSites_Site_Slice_Filter
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Slice_Filter'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice/{slice-id}/filter Container
      tags:
      - Sites_Site_Slice_Filter
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application}
      in: path
      name: application
      required: true
    post:
      operationId: postSites_Site_Slice_Filter
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Slice_Filter'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/slice/{slice-id}/filter
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice/{slice-id}/mbr:
    delete:
      operationId: deleteSites_Site_Slice_Mbr_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/slice/{slice-id}/mbr
    description: Per slice Maximum Bit Rate
    get:
      operationId: getSites_Site_Slice_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Slice_Mbr'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice/{slice-id}/mbr Container
      tags:
      - Sites_Site_Slice
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    post:
      operationId: postSites_Site_Slice_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Slice_Mbr'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/slice/{slice-id}/mbr
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice/{slice-id}/priority-traffic-rule:
    description: List of priority traffic rules
    get:
      operationId: getSites_Site_Slice_Priority-traffic-rule_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Slice_Priority-traffic-rule_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice/{slice-id}/priority-traffic-rule List
      tags:
      - Sites_Site_Slice_Priority-traffic-rule
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}:
    delete:
      operationId: deleteSites_Site_Slice_Priority-traffic-rule_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/slice/{slice-id}/priority-traffic-rule
    description: List of priority traffic rules
    get:
      operationId: getSites_Site_Slice_Priority-traffic-rule
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Slice_Priority-traffic-rule'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/slice/{slice-id}/priority-traffic-rule Container
      tags:
      - Sites_Site_Slice_Priority-traffic-rule
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {slice-id}
      in: path
      name: slice-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {priority-traffic-rule-id}
      in: path
      name: priority-traffic-rule-id
      required: true
    post:
      operationId: postSites_Site_Slice_Priority-traffic-rule
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Slice_Priority-traffic-rule'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/slice/{slice-id}/priority-traffic-rule
  /aether/v2.1.x/{target}/sites/site/{site-id}/small-cell:
    description: List of small cell addresses
    get:
      operationId: getSites_Site_Small-cell_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Small-cell_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/small-cell List
      tags:
      - Sites_Site_Small-cell
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/small-cell/{small-cell-id}:
    delete:
      operationId: deleteSites_Site_Small-cell_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/small-cell
    description: List of small cell addresses
    get:
      operationId: getSites_Site_Small-cell
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Small-cell'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/small-cell Container
      tags:
      - Sites_Site_Small-cell
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {small-cell-id}
      in: path
      name: small-cell-id
      required: true
    post:
      operationId: postSites_Site_Small-cell
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Small-cell'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/small-cell
  /aether/v2.1.x/{target}/sites/site/{site-id}/upf:
    description: A list of named upfs.
    get:
      operationId: getSites_Site_Upf_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sites_Site_Upf_List'
                type: array
          description: GET OK 200
      summary: GET /sites/site/{site-id}/upf List
      tags:
      - Sites_Site_Upf
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
  /aether/v2.1.x/{target}/sites/site/{site-id}/upf/{upf-id}:
    delete:
      operationId: deleteSites_Site_Upf_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /sites/site/{site-id}/upf
    description: A list of named upfs.
    get:
      operationId: getSites_Site_Upf
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sites_Site_Upf'
          description: GET OK 200
      summary: GET /sites/site/{site-id}/upf Container
      tags:
      - Sites_Site_Upf
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {site-id}
      in: path
      name: site-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {upf-id}
      in: path
      name: upf-id
      required: true
    post:
      operationId: postSites_Site_Upf
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Sites_Site_Upf'
      responses:
        "201":
          description: created
      summary: POST /sites/site/{site-id}/upf
  /aether/v2.1.x/{target}/templates:
    delete:
      operationId: deleteTemplates_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /templates
    description: The template grouping
    get:
      operationId: getTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates'
          description: GET OK 200
      summary: GET /templates Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postTemplates
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Templates'
      responses:
        "201":
          description: created
      summary: POST /templates
  /aether/v2.1.x/{target}/templates/template:
    description: List of slice templates
    get:
      operationId: getTemplates_Template_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Templates_Template_List'
                type: array
          description: GET OK 200
      summary: GET /templates/template List
      tags:
      - Templates_Template
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v2.1.x/{target}/templates/template/{template-id}:
    delete:
      operationId: deleteTemplates_Template_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /templates/template
    description: List of slice templates
    get:
      operationId: getTemplates_Template
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates_Template'
          description: GET OK 200
      summary: GET /templates/template Container
      tags:
      - Templates_Template
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {template-id}
      in: path
      name: template-id
      required: true
    post:
      operationId: postTemplates_Template
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Templates_Template'
      responses:
        "201":
          description: created
      summary: POST /templates/template
  /aether/v2.1.x/{target}/templates/template/{template-id}/mbr:
    delete:
      operationId: deleteTemplates_Template_Mbr_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /templates/template/{template-id}/mbr
    description: Per-Slice QOS Settings Maximum Bit Rate
    get:
      operationId: getTemplates_Template_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates_Template_Mbr'
          description: GET OK 200
      summary: GET /templates/template/{template-id}/mbr Container
      tags:
      - Templates_Template
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {template-id}
      in: path
      name: template-id
      required: true
    post:
      operationId: postTemplates_Template_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Templates_Template_Mbr'
      responses:
        "201":
          description: created
      summary: POST /templates/template/{template-id}/mbr
  /aether/v2.1.x/{target}/traffic-classes:
    delete:
      operationId: deleteTraffic-classes_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /traffic-classes
    description: The traffic-class grouping
    get:
      operationId: getTraffic-classes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-classes'
          description: GET OK 200
      summary: GET /traffic-classes Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postTraffic-classes
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Traffic-classes'
      responses:
        "201":
          description: created
      summary: POST /traffic-classes
  /aether/v2.1.x/{target}/traffic-classes/traffic-class:
    description: List of traffic class
    get:
      operationId: getTraffic-classes_Traffic-class_List
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Traffic-classes_Traffic-class_List'
                type: array
          description: GET OK 200
      summary: GET /traffic-classes/traffic-class List
      tags:
      - Traffic-classes_Traffic-class
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v2.1.x/{target}/traffic-classes/traffic-class/{traffic-class-id}:
    delete:
      operationId: deleteTraffic-classes_Traffic-class_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /traffic-classes/traffic-class
    description: List of traffic class
    get:
      operationId: getTraffic-classes_Traffic-class
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-classes_Traffic-class'
          description: GET OK 200
      summary: GET /traffic-classes/traffic-class Container
      tags:
      - Traffic-classes_Traffic-class
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {traffic-class-id}
      in: path
      name: traffic-class-id
      required: true
    post:
      operationId: postTraffic-classes_Traffic-class
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Traffic-classes_Traffic-class'
      responses:
        "201":
          description: created
      summary: POST /traffic-classes/traffic-class
