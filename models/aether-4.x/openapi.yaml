# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0
components:
  parameters:
    target:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: target (target in onos-config)
      in: path
      name: target
      required: true
  requestBodies:
    RequestBody_Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    RequestBody_Application_Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application_Application'
    RequestBody_Application_Application_Endpoint:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application_Application_Endpoint'
    RequestBody_Application_Application_Endpoint_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application_Application_Endpoint_Mbr'
    RequestBody_Connectivity-service:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Connectivity-service'
    RequestBody_Connectivity-service_Connectivity-service:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Connectivity-service_Connectivity-service'
    RequestBody_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device-group'
    RequestBody_Device-group_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device-group_Device-group'
    RequestBody_Device-group_Device-group_Device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device-group_Device-group_Device'
    RequestBody_Device-group_Device-group_Device_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device-group_Device-group_Device_Mbr'
    RequestBody_Device-group_Device-group_Imsis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device-group_Device-group_Imsis'
    RequestBody_Enterprise:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enterprise'
    RequestBody_Enterprise_Enterprise:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enterprise_Enterprise'
    RequestBody_Enterprise_Enterprise_Connectivity-service:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enterprise_Enterprise_Connectivity-service'
    RequestBody_Ip-domain:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ip-domain'
    RequestBody_Ip-domain_Ip-domain:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ip-domain_Ip-domain'
    RequestBody_Site:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site'
    RequestBody_Site_Site:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Site'
    RequestBody_Site_Site_Imsi-definition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Site_Imsi-definition'
    RequestBody_Site_Site_Monitoring:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Site_Monitoring'
    RequestBody_Site_Site_Monitoring_Edge-device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Site_Monitoring_Edge-device'
    RequestBody_Site_Site_Small-cell:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Site_Site_Small-cell'
    RequestBody_Template:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template'
    RequestBody_Template_Template:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template_Template'
    RequestBody_Template_Template_Slice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template_Template_Slice'
    RequestBody_Template_Template_Slice_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template_Template_Slice_Mbr'
    RequestBody_Traffic-class:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Traffic-class'
    RequestBody_Traffic-class_Traffic-class:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Traffic-class_Traffic-class'
    RequestBody_Upf:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Upf'
    RequestBody_Upf_Upf:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Upf_Upf'
    RequestBody_Vcs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs'
    RequestBody_Vcs_Vcs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs_Vcs'
    RequestBody_Vcs_Vcs_Device-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs_Vcs_Device-group'
    RequestBody_Vcs_Vcs_Filter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs_Vcs_Filter'
    RequestBody_Vcs_Vcs_Slice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs_Vcs_Slice'
    RequestBody_Vcs_Vcs_Slice_Mbr:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vcs_Vcs_Slice_Mbr'
  schemas:
    AdditionalPropertiesUnchTarget:
      description: both the additional property 'unchanged' and the 'target'
      properties:
        target:
          description: an override of the target (target)
          title: target
          type: string
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertiesUnchTarget
      type: object
    AdditionalPropertyTarget:
      description: Optionally specify a target other than the default (only on PATCH
        method)
      properties:
        target:
          description: an override of the target (target)
          title: target
          type: string
      title: AdditionalPropertyTarget
      type: object
    AdditionalPropertyUnchanged:
      description: To optionally omit 'required' properties, add them to 'unchanged'
        list
      properties:
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertyUnchanged
      type: object
    Application:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        application:
          $ref: '#/components/schemas/Application_Application_List'
      title: Application
      type: object
    Application_Application:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of applications (single)
      properties:
        address:
          description: Address of this application. Either a hostname, an IP, or a
            subnet.
          title: address
          type: string
        description:
          description: description of this application
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint:
          $ref: '#/components/schemas/Application_Application_Endpoint_List'
        enterprise:
          description: Link to enterprise that owns this Application. May be set to
            None if the application is global to all Enterprises.
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this application.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
      required:
      - address
      - enterprise
      - id
      title: Application_Application
      type: object
      x-list-multiple: true
    Application_Application_Endpoint:
      description: list for endpoint (single)
      properties:
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        endpoint-id:
          description: Id of this endpoint
          maxLength: 18446744073709551615
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: endpoint-id
          type: string
          x-go-type: ListKey
        mbr:
          $ref: '#/components/schemas/Application_Application_Endpoint_Mbr'
        port-end:
          description: Last port in range
          maximum: 65535
          minimum: 0
          title: port-end
          type: integer
        port-start:
          description: First port in range
          maximum: 65535
          minimum: 0
          title: port-start
          type: integer
        protocol:
          default: TCP
          description: Protocol of this endpoint
          maxLength: 3
          minLength: 3
          pattern: TCP|UDP
          title: protocol
          type: string
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-class/tc:traffic-class/tc:id
      required:
      - endpoint-id
      title: Application_Application_Endpoint
      type: object
      x-list-multiple: true
    Application_Application_Endpoint_List:
      description: list for endpoint (list)
      items:
        $ref: '#/components/schemas/Application_Application_Endpoint'
      type: array
      uniqueItems: true
      x-keys:
      - endpoint-id
      x-list-multiple: true
    Application_Application_Endpoint_Mbr:
      description: Maximum bitrate
      properties:
        downlink:
          description: Per-Device per application MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-Device per-Application MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      title: Application_Application_Endpoint_Mbr
      type: object
    Application_Application_List:
      description: List of applications (list)
      items:
        $ref: '#/components/schemas/Application_Application'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Connectivity-service:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        connectivity-service:
          $ref: '#/components/schemas/Connectivity-service_Connectivity-service_List'
      title: Connectivity-service
      type: object
    Connectivity-service_Connectivity-service:
      description: List of connectivity services (single)
      properties:
        acc-prometheus-url:
          description: URL of ACC prometheus
          title: acc-prometheus-url
          type: string
        core-5g-endpoint:
          description: url of the 5g core
          title: core-5g-endpoint
          type: string
        description:
          description: description of this connectivity service
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        id:
          description: ID for this connectivity service.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
      required:
      - id
      title: Connectivity-service_Connectivity-service
      type: object
      x-list-multiple: true
    Connectivity-service_Connectivity-service_List:
      description: List of connectivity services (list)
      items:
        $ref: '#/components/schemas/Connectivity-service_Connectivity-service'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Device-group:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        device-group:
          $ref: '#/components/schemas/Device-group_Device-group_List'
      title: Device-group
      type: object
    Device-group_Device-group:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of device groups (single)
      properties:
        description:
          description: description of this device group
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device:
          $ref: '#/components/schemas/Device-group_Device-group_Device'
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        id:
          description: ID for this device group.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
        imsis:
          $ref: '#/components/schemas/Device-group_Device-group_Imsis_List'
        ip-domain:
          description: |-
            Link to ip-domain settings that determine the pool of IP addresses,
            as well as the domain resolver settings to use
          title: ip-domain
          type: string
          x-leafref: /ipd:ip-domain/ipd:ip-domain/ipd:id
        site:
          description: Link to site
          title: site
          type: string
          x-leafref: /st:site/st:site/st:id
      required:
      - id
      - site
      title: Device-group_Device-group
      type: object
      x-list-multiple: true
    Device-group_Device-group_Device:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: Per-device QOS Settings
      properties:
        mbr:
          $ref: '#/components/schemas/Device-group_Device-group_Device_Mbr'
        traffic-class:
          description: Link to traffic class
          title: traffic-class
          type: string
          x-leafref: /tc:traffic-class/tc:traffic-class/tc:id
      required:
      - traffic-class
      title: Device-group_Device-group_Device
      type: object
    Device-group_Device-group_Device_Mbr:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: Maximum bitrate
      properties:
        downlink:
          description: Per-device MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        uplink:
          description: Per-device MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
      required:
      - downlink
      - uplink
      title: Device-group_Device-group_Device_Mbr
      type: object
    Device-group_Device-group_Imsis:
      description: |-
        List of imsi ranges that comprise this group. It's acceptable for
        a range to degenerate to being a singleton (single)
      properties:
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        imsi-id:
          description: Id of this imsi-range
          maxLength: 18446744073709551615
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: imsi-id
          type: string
          x-go-type: ListKey
        imsi-range-from:
          description: value of imsi-range-from
          format: int64
          minimum: 0
          title: imsi-range-from
          type: integer
        imsi-range-to:
          description: value of imsi-range-to
          format: int64
          minimum: 0
          title: imsi-range-to
          type: integer
      required:
      - imsi-id
      title: Device-group_Device-group_Imsis
      type: object
      x-list-multiple: true
    Device-group_Device-group_Imsis_List:
      description: |-
        List of imsi ranges that comprise this group. It's acceptable for
        a range to degenerate to being a singleton (list)
      items:
        $ref: '#/components/schemas/Device-group_Device-group_Imsis'
      type: array
      uniqueItems: true
      x-keys:
      - imsi-id
      x-list-multiple: true
    Device-group_Device-group_List:
      description: List of device groups (list)
      items:
        $ref: '#/components/schemas/Device-group_Device-group'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Enterprise:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        enterprise:
          $ref: '#/components/schemas/Enterprise_Enterprise_List'
      title: Enterprise
      type: object
    Enterprise_Enterprise:
      description: List of enterprises (single)
      properties:
        connectivity-service:
          $ref: '#/components/schemas/Enterprise_Enterprise_Connectivity-service_List'
        description:
          description: description of this enterprise
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        id:
          description: ID for this enterprise.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
      required:
      - id
      title: Enterprise_Enterprise
      type: object
      x-list-multiple: true
    Enterprise_Enterprise_Connectivity-service:
      description: The list for connectivity-service (single)
      properties:
        connectivity-service:
          description: Link to connectivity services where configuration should be
            pushed for this enterprise's devices
          title: connectivity-service
          type: string
          x-go-type: ListKey
          x-leafref: /cs:connectivity-service/cs:connectivity-service/cs:id
        enabled:
          default: true
          description: Allow or disallow pushes to this connectivity service
          title: enabled
          type: boolean
      required:
      - connectivity-service
      title: Enterprise_Enterprise_Connectivity-service
      type: object
      x-list-multiple: true
    Enterprise_Enterprise_Connectivity-service_List:
      description: The list for connectivity-service (list)
      items:
        $ref: '#/components/schemas/Enterprise_Enterprise_Connectivity-service'
      type: array
      uniqueItems: true
      x-keys:
      - connectivity-service
      x-list-multiple: true
    Enterprise_Enterprise_List:
      description: List of enterprises (list)
      items:
        $ref: '#/components/schemas/Enterprise_Enterprise'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Ip-domain:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        ip-domain:
          $ref: '#/components/schemas/Ip-domain_Ip-domain_List'
      title: Ip-domain
      type: object
    Ip-domain_Ip-domain:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of ip domains (single)
      properties:
        admin-status:
          default: ENABLE
          description: administrative status
          maxLength: 16
          pattern: ENABLE|MAINTENANCE|DISABLE
          title: admin-status
          type: string
        description:
          description: description of this ip domain
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        dnn:
          description: DNN/APN
          maxLength: 32
          minLength: 1
          title: dnn
          type: string
        dns-primary:
          description: primary dns server name
          title: dns-primary
          type: string
        dns-secondary:
          description: secondary dns server name
          title: dns-secondary
          type: string
        enterprise:
          description: Link to enterprise that owns this IP-Domain
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this ip domain.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
        mtu:
          default: 1492
          description: maximum transmission unit
          maximum: 65535
          minimum: 0
          title: mtu
          type: integer
        subnet:
          description: subnet to allocate ip addresses from
          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))
          title: subnet
          type: string
      required:
      - dnn
      - enterprise
      - id
      - subnet
      title: Ip-domain_Ip-domain
      type: object
      x-list-multiple: true
    Ip-domain_Ip-domain_List:
      description: List of ip domains (list)
      items:
        $ref: '#/components/schemas/Ip-domain_Ip-domain'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Site:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        site:
          $ref: '#/components/schemas/Site_Site_List'
      title: Site
      type: object
    Site_Site:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of site (single)
      properties:
        description:
          description: description of this site
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enterprise:
          description: Link to enterprise that owns this site
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this site.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
        imsi-definition:
          $ref: '#/components/schemas/Site_Site_Imsi-definition'
        monitoring:
          $ref: '#/components/schemas/Site_Site_Monitoring'
        small-cell:
          $ref: '#/components/schemas/Site_Site_Small-cell_List'
      required:
      - enterprise
      - id
      title: Site_Site
      type: object
      x-list-multiple: true
    Site_Site_Imsi-definition:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: container for imsi-defination
      properties:
        enterprise:
          description: enterprise-specific identifier
          format: int32
          maximum: 999
          minimum: 0
          title: enterprise
          type: integer
        format:
          description: IMSI format specifier, describes how fields are packed into
            an IMSI. Must be exactly 15 characters long. For example, CCCNNNEEESSSSSS.
          maxLength: 15
          minLength: 15
          title: format
          type: string
        mcc:
          description: mobile country code
          pattern: '[0-9]{3}'
          title: mcc
          type: string
        mnc:
          description: mobile network code
          pattern: '[0-9]{2,3}'
          title: mnc
          type: string
      required:
      - enterprise
      - format
      - mcc
      - mnc
      title: Site_Site_Imsi-definition
      type: object
    Site_Site_List:
      description: List of site (list)
      items:
        $ref: '#/components/schemas/Site_Site'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Site_Site_Monitoring:
      description: container for monitoring
      properties:
        edge-cluster-prometheus-url:
          description: URL of edge cluster prometheus
          title: edge-cluster-prometheus-url
          type: string
        edge-device:
          $ref: '#/components/schemas/Site_Site_Monitoring_Edge-device_List'
        edge-monitoring-prometheus-url:
          description: URL of monitoring prometheus
          title: edge-monitoring-prometheus-url
          type: string
      title: Site_Site_Monitoring
      type: object
    Site_Site_Monitoring_Edge-device:
      description: List of edge monitoring devices (single)
      properties:
        description:
          description: description of this site
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        edge-device-id:
          description: Id of edge monitoring device
          maxLength: 18446744073709551615
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: edge-device-id
          type: string
          x-go-type: ListKey
      required:
      - edge-device-id
      title: Site_Site_Monitoring_Edge-device
      type: object
      x-list-multiple: true
    Site_Site_Monitoring_Edge-device_List:
      description: List of edge monitoring devices (list)
      items:
        $ref: '#/components/schemas/Site_Site_Monitoring_Edge-device'
      type: array
      uniqueItems: true
      x-keys:
      - edge-device-id
      x-list-multiple: true
    Site_Site_Small-cell:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of small cell addresses (single)
      properties:
        address:
          description: Address of small cell
          title: address
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enable:
          default: true
          description: Enable this small cell
          title: enable
          type: boolean
        small-cell-id:
          description: Id of small cell
          maxLength: 18446744073709551615
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: small-cell-id
          type: string
          x-go-type: ListKey
        tac:
          description: Type Allocation Code
          maxLength: 8
          minLength: 4
          pattern: '[0-9A-F\.]*'
          title: tac
          type: string
      required:
      - small-cell-id
      - tac
      title: Site_Site_Small-cell
      type: object
      x-list-multiple: true
    Site_Site_Small-cell_List:
      description: List of small cell addresses (list)
      items:
        $ref: '#/components/schemas/Site_Site_Small-cell'
      type: array
      uniqueItems: true
      x-keys:
      - small-cell-id
      x-list-multiple: true
    Template:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        template:
          $ref: '#/components/schemas/Template_Template_List'
      title: Template
      type: object
    Template_Template:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of vcs templates (single)
      properties:
        default-behavior:
          description: Default behavior if no filter rules match
          maxLength: 20
          pattern: DENY-ALL|ALLOW-ALL|ALLOW-PUBLIC
          title: default-behavior
          type: string
        description:
          description: description of this vcs template
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        id:
          description: ID for this vcs template.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
        sd:
          description: Slice differentiator
          format: int32
          maximum: 16777215
          minimum: 0
          title: sd
          type: integer
        slice:
          $ref: '#/components/schemas/Template_Template_Slice'
        sst:
          description: Slice/Service type
          maximum: 255
          minimum: 1
          title: sst
          type: integer
      required:
      - default-behavior
      - id
      title: Template_Template
      type: object
      x-list-multiple: true
    Template_Template_List:
      description: List of vcs templates (list)
      items:
        $ref: '#/components/schemas/Template_Template'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Template_Template_Slice:
      description: Per-Slice QOS Settings
      properties:
        mbr:
          $ref: '#/components/schemas/Template_Template_Slice_Mbr'
      title: Template_Template_Slice
      type: object
    Template_Template_Slice_Mbr:
      description: Maximum bitrate
      properties:
        downlink:
          description: Per-Slice MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        downlink-burst-size:
          default: 625000
          description: Per-Slice Downlink burst size
          format: int32
          minimum: 0
          title: downlink-burst-size
          type: integer
        uplink:
          description: Per-Slice MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
        uplink-burst-size:
          default: 625000
          description: Per-Slice Uplink burst size
          format: int32
          minimum: 0
          title: uplink-burst-size
          type: integer
      title: Template_Template_Slice_Mbr
      type: object
    Traffic-class:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        traffic-class:
          $ref: '#/components/schemas/Traffic-class_Traffic-class_List'
      title: Traffic-class
      type: object
    Traffic-class_Traffic-class:
      description: List of traffic class (single)
      properties:
        arp:
          description: Allocation and Retention Priority. 1 is the highest. 15 is
            the lowest.
          maximum: 15
          minimum: 1
          title: arp
          type: integer
        description:
          description: description of this traffic class
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        id:
          description: ID for this traffic class.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
        pdb:
          description: PDB
          maximum: 1000
          minimum: 0
          title: pdb
          type: integer
        pelr:
          description: PELR exponent
          maximum: 10
          minimum: 0
          title: pelr
          type: integer
        qci:
          description: QOS Class Identifier
          maximum: 32
          minimum: 1
          title: qci
          type: integer
      required:
      - id
      title: Traffic-class_Traffic-class
      type: object
      x-list-multiple: true
    Traffic-class_Traffic-class_List:
      description: List of traffic class (list)
      items:
        $ref: '#/components/schemas/Traffic-class_Traffic-class'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Upf:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        upf:
          $ref: '#/components/schemas/Upf_Upf_List'
      title: Upf
      type: object
    Upf_Upf:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: A list of named upfs. (single)
      properties:
        address:
          description: Address of UPF
          title: address
          type: string
        config-endpoint:
          description: url for configuring the UPF
          title: config-endpoint
          type: string
        description:
          description: description of this UPF
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enterprise:
          description: Link to enterprise that owns this Access Point List
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        id:
          description: ID for this upf.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
        port:
          description: Port for UPF
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        site:
          description: Link to site
          title: site
          type: string
          x-leafref: /st:site/st:site/st:id
      required:
      - address
      - enterprise
      - id
      - port
      - site
      title: Upf_Upf
      type: object
      x-list-multiple: true
    Upf_Upf_List:
      description: A list of named upfs. (list)
      items:
        $ref: '#/components/schemas/Upf_Upf'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Vcs:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: The top level container
      properties:
        vcs:
          $ref: '#/components/schemas/Vcs_Vcs_List'
      title: Vcs
      type: object
    Vcs_Vcs:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of virtual cellular services (single)
      properties:
        default-behavior:
          description: Default behavior if no filter rules match
          maxLength: 20
          pattern: DENY-ALL|ALLOW-ALL|ALLOW-PUBLIC
          title: default-behavior
          type: string
        description:
          description: description of this vcs
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        device-group:
          $ref: '#/components/schemas/Vcs_Vcs_Device-group_List'
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        enterprise:
          description: Link to enterprise that owns this VCS
          title: enterprise
          type: string
          x-leafref: /ent:enterprise/ent:enterprise/ent:id
        filter:
          $ref: '#/components/schemas/Vcs_Vcs_Filter_List'
        id:
          description: ID for this vcs.
          maxLength: 32
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: id
          type: string
          x-go-type: ListKey
        sd:
          description: Slice differentiator. Immutable.
          format: int32
          maximum: 16777215
          minimum: 0
          title: sd
          type: integer
        site:
          description: Link to site where this VCS is deployed
          title: site
          type: string
          x-leafref: /st:site/st:site/st:id
        slice:
          $ref: '#/components/schemas/Vcs_Vcs_Slice'
        sst:
          description: Slice/Service type. Immutable.
          maximum: 255
          minimum: 1
          title: sst
          type: integer
        upf:
          description: Link to user plane that implements this vcf
          title: upf
          type: string
          x-leafref: /upf:upf/upf:upf/upf:id
      required:
      - default-behavior
      - enterprise
      - id
      - sd
      - site
      - sst
      title: Vcs_Vcs
      type: object
      x-list-multiple: true
    Vcs_Vcs_Device-group:
      description: |-
        A list of device groups. Groups will only participate in
        the VCS if the enable field is set to True (single)
      properties:
        device-group:
          description: Link to device group
          title: device-group
          type: string
          x-go-type: ListKey
          x-leafref: /dg:device-group/dg:device-group/dg:id
        enable:
          default: true
          description: Enable this device group
          title: enable
          type: boolean
      required:
      - device-group
      title: Vcs_Vcs_Device-group
      type: object
      x-list-multiple: true
    Vcs_Vcs_Device-group_List:
      description: |-
        A list of device groups. Groups will only participate in
        the VCS if the enable field is set to True (list)
      items:
        $ref: '#/components/schemas/Vcs_Vcs_Device-group'
      type: array
      uniqueItems: true
      x-keys:
      - device-group
      x-list-multiple: true
    Vcs_Vcs_Filter:
      description: |-
        A list of applications to allow and/or deny. Rules are executed in
        priority order. The first rule to match will determine the fate
        of the packet. (single)
      properties:
        allow:
          default: true
          description: Allow or deny this application
          title: allow
          type: boolean
        application:
          description: Link to application
          title: application
          type: string
          x-go-type: ListKey
          x-leafref: /app:application/app:application/app:id
        priority:
          description: Priority of this application
          maximum: 200
          minimum: 0
          title: priority
          type: integer
      required:
      - application
      title: Vcs_Vcs_Filter
      type: object
      x-list-multiple: true
    Vcs_Vcs_Filter_List:
      description: |-
        A list of applications to allow and/or deny. Rules are executed in
        priority order. The first rule to match will determine the fate
        of the packet. (list)
      items:
        $ref: '#/components/schemas/Vcs_Vcs_Filter'
      type: array
      uniqueItems: true
      x-keys:
      - application
      x-list-multiple: true
    Vcs_Vcs_List:
      description: List of virtual cellular services (list)
      items:
        $ref: '#/components/schemas/Vcs_Vcs'
      type: array
      uniqueItems: true
      x-keys:
      - id
      x-list-multiple: true
    Vcs_Vcs_Slice:
      description: Per-Slice QOS Settings
      properties:
        mbr:
          $ref: '#/components/schemas/Vcs_Vcs_Slice_Mbr'
      title: Vcs_Vcs_Slice
      type: object
    Vcs_Vcs_Slice_Mbr:
      description: Maximum bitrate
      properties:
        downlink:
          description: Per-Slice MBR downlink data rate in bps
          format: int64
          minimum: 0
          title: downlink
          type: integer
        downlink-burst-size:
          default: 625000
          description: Per-Slice Downlink burst size
          format: int32
          minimum: 0
          title: downlink-burst-size
          type: integer
        uplink:
          description: Per-Slice MBR uplink data rate in bps
          format: int64
          minimum: 0
          title: uplink
          type: integer
        uplink-burst-size:
          default: 625000
          description: Per-Slice Uplink burst size
          format: int32
          minimum: 0
          title: uplink-burst-size
          type: integer
      title: Vcs_Vcs_Slice_Mbr
      type: object
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  description: OpenAPI 3 specification is generated from aether onos-config model
    plugin
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: aether-4.0.18
  version: 4.0.18
openapi: 3.0.0
paths:
  /aether/v4.0.18/{target}/application:
    delete:
      operationId: deleteApplication
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /application
    description: The top level container
    get:
      operationId: getApplication
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: GET OK 200
      summary: GET /application Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postApplication
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application'
      responses:
        "201":
          description: created
      summary: POST /application
  /aether/v4.0.18/{target}/application/application:
    description: List of applications
    get:
      operationId: getApplication_Application_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Application_List'
          description: GET OK 200
      summary: GET /application/application List
      tags:
      - Application_Application
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/application/application/{id}:
    delete:
      operationId: deleteApplication_Application
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /application/application
    description: List of applications
    get:
      operationId: getApplication_Application
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Application'
          description: GET OK 200
      summary: GET /application/application Container
      tags:
      - Application_Application
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postApplication_Application
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application_Application'
      responses:
        "201":
          description: created
      summary: POST /application/application
  /aether/v4.0.18/{target}/application/application/{id}/endpoint:
    description: list for endpoint
    get:
      operationId: getApplication_Application_Endpoint_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Application_Endpoint_List'
          description: GET OK 200
      summary: GET /application/application/{id}/endpoint List
      tags:
      - Application_Application_Endpoint
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
  /aether/v4.0.18/{target}/application/application/{id}/endpoint/{endpoint-id}:
    delete:
      operationId: deleteApplication_Application_Endpoint
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /application/application/{id}/endpoint
    description: list for endpoint
    get:
      operationId: getApplication_Application_Endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Application_Endpoint'
          description: GET OK 200
      summary: GET /application/application/{id}/endpoint Container
      tags:
      - Application_Application_Endpoint
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {endpoint-id}
      in: path
      name: endpoint-id
      required: true
    post:
      operationId: postApplication_Application_Endpoint
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application_Application_Endpoint'
      responses:
        "201":
          description: created
      summary: POST /application/application/{id}/endpoint
  /aether/v4.0.18/{target}/application/application/{id}/endpoint/{endpoint-id}/mbr:
    delete:
      operationId: deleteApplication_Application_Endpoint_Mbr
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /application/application/{id}/endpoint/{endpoint-id}/mbr
    description: Maximum bitrate
    get:
      operationId: getApplication_Application_Endpoint_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application_Application_Endpoint_Mbr'
          description: GET OK 200
      summary: GET /application/application/{id}/endpoint/{endpoint-id}/mbr Container
      tags:
      - Application_Application_Endpoint
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {endpoint-id}
      in: path
      name: endpoint-id
      required: true
    post:
      operationId: postApplication_Application_Endpoint_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Application_Application_Endpoint_Mbr'
      responses:
        "201":
          description: created
      summary: POST /application/application/{id}/endpoint/{endpoint-id}/mbr
  /aether/v4.0.18/{target}/connectivity-service:
    delete:
      operationId: deleteConnectivity-service
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /connectivity-service
    description: The top level container
    get:
      operationId: getConnectivity-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connectivity-service'
          description: GET OK 200
      summary: GET /connectivity-service Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postConnectivity-service
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Connectivity-service'
      responses:
        "201":
          description: created
      summary: POST /connectivity-service
  /aether/v4.0.18/{target}/connectivity-service/connectivity-service:
    description: List of connectivity services
    get:
      operationId: getConnectivity-service_Connectivity-service_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connectivity-service_Connectivity-service_List'
          description: GET OK 200
      summary: GET /connectivity-service/connectivity-service List
      tags:
      - Connectivity-service_Connectivity-service
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/connectivity-service/connectivity-service/{id}:
    delete:
      operationId: deleteConnectivity-service_Connectivity-service
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /connectivity-service/connectivity-service
    description: List of connectivity services
    get:
      operationId: getConnectivity-service_Connectivity-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connectivity-service_Connectivity-service'
          description: GET OK 200
      summary: GET /connectivity-service/connectivity-service Container
      tags:
      - Connectivity-service_Connectivity-service
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postConnectivity-service_Connectivity-service
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Connectivity-service_Connectivity-service'
      responses:
        "201":
          description: created
      summary: POST /connectivity-service/connectivity-service
  /aether/v4.0.18/{target}/device-group:
    delete:
      operationId: deleteDevice-group
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /device-group
    description: The top level container
    get:
      operationId: getDevice-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group'
          description: GET OK 200
      summary: GET /device-group Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postDevice-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Device-group'
      responses:
        "201":
          description: created
      summary: POST /device-group
  /aether/v4.0.18/{target}/device-group/device-group:
    description: List of device groups
    get:
      operationId: getDevice-group_Device-group_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group_Device-group_List'
          description: GET OK 200
      summary: GET /device-group/device-group List
      tags:
      - Device-group_Device-group
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/device-group/device-group/{id}:
    delete:
      operationId: deleteDevice-group_Device-group
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /device-group/device-group
    description: List of device groups
    get:
      operationId: getDevice-group_Device-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group_Device-group'
          description: GET OK 200
      summary: GET /device-group/device-group Container
      tags:
      - Device-group_Device-group
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postDevice-group_Device-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Device-group_Device-group'
      responses:
        "201":
          description: created
      summary: POST /device-group/device-group
  /aether/v4.0.18/{target}/device-group/device-group/{id}/device:
    delete:
      operationId: deleteDevice-group_Device-group_Device
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /device-group/device-group/{id}/device
    description: Per-device QOS Settings
    get:
      operationId: getDevice-group_Device-group_Device
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group_Device-group_Device'
          description: GET OK 200
      summary: GET /device-group/device-group/{id}/device Container
      tags:
      - Device-group_Device-group
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postDevice-group_Device-group_Device
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Device-group_Device-group_Device'
      responses:
        "201":
          description: created
      summary: POST /device-group/device-group/{id}/device
  /aether/v4.0.18/{target}/device-group/device-group/{id}/device/mbr:
    delete:
      operationId: deleteDevice-group_Device-group_Device_Mbr
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /device-group/device-group/{id}/device/mbr
    description: Maximum bitrate
    get:
      operationId: getDevice-group_Device-group_Device_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group_Device-group_Device_Mbr'
          description: GET OK 200
      summary: GET /device-group/device-group/{id}/device/mbr Container
      tags:
      - Device-group_Device-group_Device
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postDevice-group_Device-group_Device_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Device-group_Device-group_Device_Mbr'
      responses:
        "201":
          description: created
      summary: POST /device-group/device-group/{id}/device/mbr
  /aether/v4.0.18/{target}/device-group/device-group/{id}/imsis:
    description: |-
      List of imsi ranges that comprise this group. It's acceptable for
      a range to degenerate to being a singleton
    get:
      operationId: getDevice-group_Device-group_Imsis_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group_Device-group_Imsis_List'
          description: GET OK 200
      summary: GET /device-group/device-group/{id}/imsis List
      tags:
      - Device-group_Device-group_Imsis
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
  /aether/v4.0.18/{target}/device-group/device-group/{id}/imsis/{imsi-id}:
    delete:
      operationId: deleteDevice-group_Device-group_Imsis
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /device-group/device-group/{id}/imsis
    description: |-
      List of imsi ranges that comprise this group. It's acceptable for
      a range to degenerate to being a singleton
    get:
      operationId: getDevice-group_Device-group_Imsis
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device-group_Device-group_Imsis'
          description: GET OK 200
      summary: GET /device-group/device-group/{id}/imsis Container
      tags:
      - Device-group_Device-group_Imsis
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {imsi-id}
      in: path
      name: imsi-id
      required: true
    post:
      operationId: postDevice-group_Device-group_Imsis
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Device-group_Device-group_Imsis'
      responses:
        "201":
          description: created
      summary: POST /device-group/device-group/{id}/imsis
  /aether/v4.0.18/{target}/enterprise:
    delete:
      operationId: deleteEnterprise
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /enterprise
    description: The top level container
    get:
      operationId: getEnterprise
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
          description: GET OK 200
      summary: GET /enterprise Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postEnterprise
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Enterprise'
      responses:
        "201":
          description: created
      summary: POST /enterprise
  /aether/v4.0.18/{target}/enterprise/enterprise:
    description: List of enterprises
    get:
      operationId: getEnterprise_Enterprise_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise_Enterprise_List'
          description: GET OK 200
      summary: GET /enterprise/enterprise List
      tags:
      - Enterprise_Enterprise
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/enterprise/enterprise/{id}:
    delete:
      operationId: deleteEnterprise_Enterprise
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /enterprise/enterprise
    description: List of enterprises
    get:
      operationId: getEnterprise_Enterprise
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise_Enterprise'
          description: GET OK 200
      summary: GET /enterprise/enterprise Container
      tags:
      - Enterprise_Enterprise
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postEnterprise_Enterprise
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Enterprise_Enterprise'
      responses:
        "201":
          description: created
      summary: POST /enterprise/enterprise
  /aether/v4.0.18/{target}/enterprise/enterprise/{id}/connectivity-service:
    description: The list for connectivity-service
    get:
      operationId: getEnterprise_Enterprise_Connectivity-service_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise_Enterprise_Connectivity-service_List'
          description: GET OK 200
      summary: GET /enterprise/enterprise/{id}/connectivity-service List
      tags:
      - Enterprise_Enterprise_Connectivity-service
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
  /aether/v4.0.18/{target}/enterprise/enterprise/{id}/connectivity-service/{connectivity-service}:
    delete:
      operationId: deleteEnterprise_Enterprise_Connectivity-service
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /enterprise/enterprise/{id}/connectivity-service
    description: The list for connectivity-service
    get:
      operationId: getEnterprise_Enterprise_Connectivity-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise_Enterprise_Connectivity-service'
          description: GET OK 200
      summary: GET /enterprise/enterprise/{id}/connectivity-service Container
      tags:
      - Enterprise_Enterprise_Connectivity-service
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {connectivity-service}
      in: path
      name: connectivity-service
      required: true
    post:
      operationId: postEnterprise_Enterprise_Connectivity-service
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Enterprise_Enterprise_Connectivity-service'
      responses:
        "201":
          description: created
      summary: POST /enterprise/enterprise/{id}/connectivity-service
  /aether/v4.0.18/{target}/ip-domain:
    delete:
      operationId: deleteIp-domain
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /ip-domain
    description: The top level container
    get:
      operationId: getIp-domain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip-domain'
          description: GET OK 200
      summary: GET /ip-domain Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postIp-domain
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Ip-domain'
      responses:
        "201":
          description: created
      summary: POST /ip-domain
  /aether/v4.0.18/{target}/ip-domain/ip-domain:
    description: List of ip domains
    get:
      operationId: getIp-domain_Ip-domain_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip-domain_Ip-domain_List'
          description: GET OK 200
      summary: GET /ip-domain/ip-domain List
      tags:
      - Ip-domain_Ip-domain
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/ip-domain/ip-domain/{id}:
    delete:
      operationId: deleteIp-domain_Ip-domain
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /ip-domain/ip-domain
    description: List of ip domains
    get:
      operationId: getIp-domain_Ip-domain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip-domain_Ip-domain'
          description: GET OK 200
      summary: GET /ip-domain/ip-domain Container
      tags:
      - Ip-domain_Ip-domain
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postIp-domain_Ip-domain
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Ip-domain_Ip-domain'
      responses:
        "201":
          description: created
      summary: POST /ip-domain/ip-domain
  /aether/v4.0.18/{target}/site:
    delete:
      operationId: deleteSite
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site
    description: The top level container
    get:
      operationId: getSite
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: GET OK 200
      summary: GET /site Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSite
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site'
      responses:
        "201":
          description: created
      summary: POST /site
  /aether/v4.0.18/{target}/site/site:
    description: List of site
    get:
      operationId: getSite_Site_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site_List'
          description: GET OK 200
      summary: GET /site/site List
      tags:
      - Site_Site
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/site/site/{id}:
    delete:
      operationId: deleteSite_Site
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/site
    description: List of site
    get:
      operationId: getSite_Site
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site'
          description: GET OK 200
      summary: GET /site/site Container
      tags:
      - Site_Site
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postSite_Site
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Site'
      responses:
        "201":
          description: created
      summary: POST /site/site
  /aether/v4.0.18/{target}/site/site/{id}/imsi-definition:
    delete:
      operationId: deleteSite_Site_Imsi-definition
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/site/{id}/imsi-definition
    description: container for imsi-defination
    get:
      operationId: getSite_Site_Imsi-definition
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site_Imsi-definition'
          description: GET OK 200
      summary: GET /site/site/{id}/imsi-definition Container
      tags:
      - Site_Site
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postSite_Site_Imsi-definition
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Site_Imsi-definition'
      responses:
        "201":
          description: created
      summary: POST /site/site/{id}/imsi-definition
  /aether/v4.0.18/{target}/site/site/{id}/monitoring:
    delete:
      operationId: deleteSite_Site_Monitoring
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/site/{id}/monitoring
    description: container for monitoring
    get:
      operationId: getSite_Site_Monitoring
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site_Monitoring'
          description: GET OK 200
      summary: GET /site/site/{id}/monitoring Container
      tags:
      - Site_Site
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postSite_Site_Monitoring
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Site_Monitoring'
      responses:
        "201":
          description: created
      summary: POST /site/site/{id}/monitoring
  /aether/v4.0.18/{target}/site/site/{id}/monitoring/edge-device:
    description: List of edge monitoring devices
    get:
      operationId: getSite_Site_Monitoring_Edge-device_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site_Monitoring_Edge-device_List'
          description: GET OK 200
      summary: GET /site/site/{id}/monitoring/edge-device List
      tags:
      - Site_Site_Monitoring_Edge-device
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
  /aether/v4.0.18/{target}/site/site/{id}/monitoring/edge-device/{edge-device-id}:
    delete:
      operationId: deleteSite_Site_Monitoring_Edge-device
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/site/{id}/monitoring/edge-device
    description: List of edge monitoring devices
    get:
      operationId: getSite_Site_Monitoring_Edge-device
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site_Monitoring_Edge-device'
          description: GET OK 200
      summary: GET /site/site/{id}/monitoring/edge-device Container
      tags:
      - Site_Site_Monitoring_Edge-device
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {edge-device-id}
      in: path
      name: edge-device-id
      required: true
    post:
      operationId: postSite_Site_Monitoring_Edge-device
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Site_Monitoring_Edge-device'
      responses:
        "201":
          description: created
      summary: POST /site/site/{id}/monitoring/edge-device
  /aether/v4.0.18/{target}/site/site/{id}/small-cell:
    description: List of small cell addresses
    get:
      operationId: getSite_Site_Small-cell_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site_Small-cell_List'
          description: GET OK 200
      summary: GET /site/site/{id}/small-cell List
      tags:
      - Site_Site_Small-cell
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
  /aether/v4.0.18/{target}/site/site/{id}/small-cell/{small-cell-id}:
    delete:
      operationId: deleteSite_Site_Small-cell
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /site/site/{id}/small-cell
    description: List of small cell addresses
    get:
      operationId: getSite_Site_Small-cell
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site_Site_Small-cell'
          description: GET OK 200
      summary: GET /site/site/{id}/small-cell Container
      tags:
      - Site_Site_Small-cell
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {small-cell-id}
      in: path
      name: small-cell-id
      required: true
    post:
      operationId: postSite_Site_Small-cell
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Site_Site_Small-cell'
      responses:
        "201":
          description: created
      summary: POST /site/site/{id}/small-cell
  /aether/v4.0.18/{target}/template:
    delete:
      operationId: deleteTemplate
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /template
    description: The top level container
    get:
      operationId: getTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: GET OK 200
      summary: GET /template Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postTemplate
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Template'
      responses:
        "201":
          description: created
      summary: POST /template
  /aether/v4.0.18/{target}/template/template:
    description: List of vcs templates
    get:
      operationId: getTemplate_Template_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Template_List'
          description: GET OK 200
      summary: GET /template/template List
      tags:
      - Template_Template
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/template/template/{id}:
    delete:
      operationId: deleteTemplate_Template
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /template/template
    description: List of vcs templates
    get:
      operationId: getTemplate_Template
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Template'
          description: GET OK 200
      summary: GET /template/template Container
      tags:
      - Template_Template
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postTemplate_Template
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Template_Template'
      responses:
        "201":
          description: created
      summary: POST /template/template
  /aether/v4.0.18/{target}/template/template/{id}/slice:
    delete:
      operationId: deleteTemplate_Template_Slice
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /template/template/{id}/slice
    description: Per-Slice QOS Settings
    get:
      operationId: getTemplate_Template_Slice
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Template_Slice'
          description: GET OK 200
      summary: GET /template/template/{id}/slice Container
      tags:
      - Template_Template
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postTemplate_Template_Slice
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Template_Template_Slice'
      responses:
        "201":
          description: created
      summary: POST /template/template/{id}/slice
  /aether/v4.0.18/{target}/template/template/{id}/slice/mbr:
    delete:
      operationId: deleteTemplate_Template_Slice_Mbr
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /template/template/{id}/slice/mbr
    description: Maximum bitrate
    get:
      operationId: getTemplate_Template_Slice_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Template_Slice_Mbr'
          description: GET OK 200
      summary: GET /template/template/{id}/slice/mbr Container
      tags:
      - Template_Template_Slice
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postTemplate_Template_Slice_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Template_Template_Slice_Mbr'
      responses:
        "201":
          description: created
      summary: POST /template/template/{id}/slice/mbr
  /aether/v4.0.18/{target}/traffic-class:
    delete:
      operationId: deleteTraffic-class
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /traffic-class
    description: The top level container
    get:
      operationId: getTraffic-class
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-class'
          description: GET OK 200
      summary: GET /traffic-class Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postTraffic-class
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Traffic-class'
      responses:
        "201":
          description: created
      summary: POST /traffic-class
  /aether/v4.0.18/{target}/traffic-class/traffic-class:
    description: List of traffic class
    get:
      operationId: getTraffic-class_Traffic-class_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-class_Traffic-class_List'
          description: GET OK 200
      summary: GET /traffic-class/traffic-class List
      tags:
      - Traffic-class_Traffic-class
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/traffic-class/traffic-class/{id}:
    delete:
      operationId: deleteTraffic-class_Traffic-class
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /traffic-class/traffic-class
    description: List of traffic class
    get:
      operationId: getTraffic-class_Traffic-class
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic-class_Traffic-class'
          description: GET OK 200
      summary: GET /traffic-class/traffic-class Container
      tags:
      - Traffic-class_Traffic-class
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postTraffic-class_Traffic-class
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Traffic-class_Traffic-class'
      responses:
        "201":
          description: created
      summary: POST /traffic-class/traffic-class
  /aether/v4.0.18/{target}/upf:
    delete:
      operationId: deleteUpf
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /upf
    description: The top level container
    get:
      operationId: getUpf
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upf'
          description: GET OK 200
      summary: GET /upf Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postUpf
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Upf'
      responses:
        "201":
          description: created
      summary: POST /upf
  /aether/v4.0.18/{target}/upf/upf:
    description: A list of named upfs.
    get:
      operationId: getUpf_Upf_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upf_Upf_List'
          description: GET OK 200
      summary: GET /upf/upf List
      tags:
      - Upf_Upf
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/upf/upf/{id}:
    delete:
      operationId: deleteUpf_Upf
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /upf/upf
    description: A list of named upfs.
    get:
      operationId: getUpf_Upf
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upf_Upf'
          description: GET OK 200
      summary: GET /upf/upf Container
      tags:
      - Upf_Upf
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postUpf_Upf
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Upf_Upf'
      responses:
        "201":
          description: created
      summary: POST /upf/upf
  /aether/v4.0.18/{target}/vcs:
    delete:
      operationId: deleteVcs
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /vcs
    description: The top level container
    get:
      operationId: getVcs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs'
          description: GET OK 200
      summary: GET /vcs Container
      tags:
      - ""
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postVcs
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs'
      responses:
        "201":
          description: created
      summary: POST /vcs
  /aether/v4.0.18/{target}/vcs/vcs:
    description: List of virtual cellular services
    get:
      operationId: getVcs_Vcs_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_List'
          description: GET OK 200
      summary: GET /vcs/vcs List
      tags:
      - Vcs_Vcs
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /aether/v4.0.18/{target}/vcs/vcs/{id}:
    delete:
      operationId: deleteVcs_Vcs
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /vcs/vcs
    description: List of virtual cellular services
    get:
      operationId: getVcs_Vcs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs'
          description: GET OK 200
      summary: GET /vcs/vcs Container
      tags:
      - Vcs_Vcs
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postVcs_Vcs
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs_Vcs'
      responses:
        "201":
          description: created
      summary: POST /vcs/vcs
  /aether/v4.0.18/{target}/vcs/vcs/{id}/device-group:
    description: |-
      A list of device groups. Groups will only participate in
      the VCS if the enable field is set to True
    get:
      operationId: getVcs_Vcs_Device-group_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_Device-group_List'
          description: GET OK 200
      summary: GET /vcs/vcs/{id}/device-group List
      tags:
      - Vcs_Vcs_Device-group
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
  /aether/v4.0.18/{target}/vcs/vcs/{id}/device-group/{device-group}:
    delete:
      operationId: deleteVcs_Vcs_Device-group
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /vcs/vcs/{id}/device-group
    description: |-
      A list of device groups. Groups will only participate in
      the VCS if the enable field is set to True
    get:
      operationId: getVcs_Vcs_Device-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_Device-group'
          description: GET OK 200
      summary: GET /vcs/vcs/{id}/device-group Container
      tags:
      - Vcs_Vcs_Device-group
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {device-group}
      in: path
      name: device-group
      required: true
    post:
      operationId: postVcs_Vcs_Device-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs_Vcs_Device-group'
      responses:
        "201":
          description: created
      summary: POST /vcs/vcs/{id}/device-group
  /aether/v4.0.18/{target}/vcs/vcs/{id}/filter:
    description: |-
      A list of applications to allow and/or deny. Rules are executed in
      priority order. The first rule to match will determine the fate
      of the packet.
    get:
      operationId: getVcs_Vcs_Filter_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_Filter_List'
          description: GET OK 200
      summary: GET /vcs/vcs/{id}/filter List
      tags:
      - Vcs_Vcs_Filter
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
  /aether/v4.0.18/{target}/vcs/vcs/{id}/filter/{application}:
    delete:
      operationId: deleteVcs_Vcs_Filter
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /vcs/vcs/{id}/filter
    description: |-
      A list of applications to allow and/or deny. Rules are executed in
      priority order. The first rule to match will determine the fate
      of the packet.
    get:
      operationId: getVcs_Vcs_Filter
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_Filter'
          description: GET OK 200
      summary: GET /vcs/vcs/{id}/filter Container
      tags:
      - Vcs_Vcs_Filter
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {application}
      in: path
      name: application
      required: true
    post:
      operationId: postVcs_Vcs_Filter
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs_Vcs_Filter'
      responses:
        "201":
          description: created
      summary: POST /vcs/vcs/{id}/filter
  /aether/v4.0.18/{target}/vcs/vcs/{id}/slice:
    delete:
      operationId: deleteVcs_Vcs_Slice
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /vcs/vcs/{id}/slice
    description: Per-Slice QOS Settings
    get:
      operationId: getVcs_Vcs_Slice
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_Slice'
          description: GET OK 200
      summary: GET /vcs/vcs/{id}/slice Container
      tags:
      - Vcs_Vcs
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postVcs_Vcs_Slice
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs_Vcs_Slice'
      responses:
        "201":
          description: created
      summary: POST /vcs/vcs/{id}/slice
  /aether/v4.0.18/{target}/vcs/vcs/{id}/slice/mbr:
    delete:
      operationId: deleteVcs_Vcs_Slice_Mbr
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /vcs/vcs/{id}/slice/mbr
    description: Maximum bitrate
    get:
      operationId: getVcs_Vcs_Slice_Mbr
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcs_Vcs_Slice_Mbr'
          description: GET OK 200
      summary: GET /vcs/vcs/{id}/slice/mbr Container
      tags:
      - Vcs_Vcs_Slice
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {id}
      in: path
      name: id
      required: true
    post:
      operationId: postVcs_Vcs_Slice_Mbr
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vcs_Vcs_Slice_Mbr'
      responses:
        "201":
          description: created
      summary: POST /vcs/vcs/{id}/slice/mbr
